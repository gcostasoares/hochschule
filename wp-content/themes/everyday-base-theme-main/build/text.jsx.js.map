{"version":3,"file":"text.jsx.js","mappings":"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","sources":["webpack://base-theme/./blocks/utilities/text/text.jsx","webpack://base-theme/./node_modules/@wordpress/icons/build-module/library/paragraph.js","webpack://base-theme/external window [\"wp\",\"blockEditor\"]","webpack://base-theme/external window [\"wp\",\"blocks\"]","webpack://base-theme/external window [\"wp\",\"primitives\"]","webpack://base-theme/external window [\"wp\",\"richText\"]","webpack://base-theme/external window \"ReactJSXRuntime\"","webpack://base-theme/webpack/bootstrap","webpack://base-theme/webpack/runtime/compat get default export","webpack://base-theme/webpack/runtime/define property getters","webpack://base-theme/webpack/runtime/hasOwnProperty shorthand","webpack://base-theme/webpack/runtime/make namespace object","webpack://base-theme/./blocks/components/text/text.jsx"],"sourcesContent":["import {\n    RichText,\n    BlockControls,\n    AlignmentToolbar,\n    RichTextToolbarButton,\n} from '@wordpress/block-editor';\n\nimport { toggleFormat, registerFormatType } from '@wordpress/rich-text';\n\nexport const defaultTextAttributes = {\n    text: {\n        type: 'string',\n    },\n    alignment: {\n        type: 'string',\n    },\n};\n\nconst underlineFormat = 'basetheme/underline-format';\nconst UnderlineButton = (props) => {\n    return (\n        <RichTextToolbarButton\n            icon=\"editor-underline\"\n            title=\"Underline\"\n            onClick={() => {\n                props.onChange(\n                    toggleFormat(props.value, {\n                        type: underlineFormat,\n                    })\n                );\n            }}\n            isActive={props.isActive}\n        />\n    );\n};\n\nregisterFormatType(underlineFormat, {\n    title: 'Underline',\n    tagName: 'u', // The tag to use for the format\n    className: null, // Optional class name\n    edit({ isActive, value, onChange }) {\n        return (\n            <UnderlineButton\n                isActive={isActive}\n                value={value}\n                onChange={onChange}\n            />\n        );\n    },\n});\n\n// TODO: Add ul-list and ol-list formats\n\nexport function Text({\n    attributes,\n    setAttributes,\n    enableAlignment = true,\n    className = '',\n}) {\n    let alignmentClass = '';\n    switch (attributes.alignment) {\n        case 'left':\n            alignmentClass = 'text-start';\n            break;\n        case 'center':\n            alignmentClass = 'text-center';\n            break;\n        case 'right':\n            alignmentClass = 'text-end';\n            break;\n        default:\n            alignmentClass = 'text-start';\n    }\n\n    const combinedClassName = `${alignmentClass} ${className}`.trim();\n\n    if (enableAlignment) {\n        return (\n            <>\n                <BlockControls>\n                    <AlignmentToolbar\n                        value={attributes.alignment}\n                        onChange={(newVal) =>\n                            setAttributes({ alignment: newVal })\n                        }\n                    />\n                </BlockControls>\n                <RichText\n                    value={attributes.text}\n                    onChange={(newText) => setAttributes({ text: newText })}\n                    placeholder=\"Text eingabe...\"\n                    className={combinedClassName}\n                />\n            </>\n        );\n    }\n\n    return (\n        <RichText\n            value={attributes.text}\n            onChange={(newText) => setAttributes({ text: newText })}\n            placeholder=\"Text eingabe...\"\n            className={combinedClassName}\n        />\n    );\n}\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst paragraph = /*#__PURE__*/_jsx(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\",\n  children: /*#__PURE__*/_jsx(Path, {\n    d: \"m9.99609 14v-.2251l.00391.0001v6.225h1.5v-14.5h2.5v14.5h1.5v-14.5h3v-1.5h-8.50391c-2.76142 0-5 2.23858-5 5 0 2.7614 2.23858 5 5 5z\"\n  })\n});\nexport default paragraph;\n//# sourceMappingURL=paragraph.js.map","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"primitives\"];","module.exports = window[\"wp\"][\"richText\"];","module.exports = window[\"ReactJSXRuntime\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\nimport { Text } from '@utilities/text/text';\nimport { paragraph } from '@wordpress/icons';\n\nregisterBlockType('basetheme/text', {\n    title: 'Text',\n    icon: paragraph,\n    category: 'layout',\n    parent: ['basetheme/grid-item', 'basetheme/container'],\n    description: 'A Description',\n    keywords: [],\n    supports: {},\n    attributes: {\n        text: {\n            type: 'string',\n        },\n        alignment: {\n            type: 'string',\n        },\n    },\n    parent: ['basetheme/container'],\n\n    edit: EditComponent,\n    save: () => null, // No save function, handled by PHP\n});\n\nfunction EditComponent(props) {\n    const { attributes, setAttributes } = props;\n    return <Text attributes={attributes} setAttributes={setAttributes} />;\n}\n"],"names":["RichText","BlockControls","AlignmentToolbar","RichTextToolbarButton","toggleFormat","registerFormatType","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","defaultTextAttributes","text","type","alignment","underlineFormat","UnderlineButton","props","icon","title","onClick","onChange","value","isActive","tagName","className","edit","Text","attributes","setAttributes","enableAlignment","alignmentClass","combinedClassName","trim","children","newVal","newText","placeholder","registerBlockType","paragraph","category","parent","description","keywords","supports","EditComponent","save"],"sourceRoot":""}